{
  "name": "my-lms-backend",
  "version": "1.0.0",
  "description": "Learning Management System Backend API",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "test:server": "node server-test.js",
    "test:server:dev": "nodemon server-test.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src/",
    "lint:fix": "eslint src/ --fix",
    "db:test": "node test-db-connection.js",
    "db:setup": "mysql -u root -p < database-setup.sql",
    "db:seed": "node database-seeder.js",
    "db:reset": "npm run db:setup && npm run db:seed",
    "production": "cross-env NODE_ENV=production node server.js",
    "production:cluster": "cross-env NODE_ENV=production pm2 start ecosystem.config.js",
    "production:stop": "pm2 stop ecosystem.config.js",
    "production:restart": "pm2 restart ecosystem.config.js",
    "production:reload": "pm2 reload ecosystem.config.js",
    "production:logs": "pm2 logs",
    "production:monitor": "pm2 monit",
    "docker:build": "docker build -t lms-backend:latest .",
    "docker:run": "docker-compose up -d",
    "docker:stop": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker system prune -f",
    "deploy:staging": "bash deploy.sh staging",
    "deploy:production": "bash deploy.sh production",
    "deploy:rollback": "bash deploy.sh production --rollback",
    "performance:test": "node scripts/performance-test.js",
    "performance:monitor": "clinic doctor -- node server.js",
    "performance:flame": "clinic flame -- node server.js",
    "performance:bubbleprof": "clinic bubbleprof -- node server.js",
    "performance:autocannon": "autocannon http://localhost:3000/health -c 10 -d 30",
    "security:audit": "npm audit --audit-level=moderate",
    "security:check": "npm audit fix",
    "backup:db": "node scripts/backup-database.js",
    "backup:files": "node scripts/backup-files.js",
    "logs:view": "tail -f logs/app.log",
    "logs:error": "tail -f logs/error.log",
    "logs:security": "tail -f logs/security.log",
    "cache:clear": "node -e \"require('./src/services/cacheService').cacheService.clear()\"",
    "cache:stats": "node -e \"console.log(JSON.stringify(require('./src/services/cacheService').cacheService.getStats(), null, 2))\"",
    "health:check": "curl -f http://localhost:3000/health || exit 1",
    "health:deep": "node scripts/health-check.js",
    "optimize:images": "node scripts/optimize-images.js",
    "optimize:database": "node scripts/optimize-database.js",
    "migrate:up": "node scripts/migrate.js up",
    "migrate:down": "node scripts/migrate.js down",
    "migrate:status": "node scripts/migrate.js status",
    "seed:dev": "cross-env NODE_ENV=development node database-seeder.js",
    "seed:test": "cross-env NODE_ENV=test node database-seeder.js",
    "precommit": "npm run lint && npm run test",
    "prepush": "npm run test:coverage && npm run security:audit",
    "prestart": "npm run health:check || echo 'Starting fresh server...'",
    "postinstall": "echo 'LMS Backend dependencies installed successfully!'",
    "build:docs": "swagger-jsdoc -d src/config/swagger.js src/routes/*.js -o api-docs.json",
    "serve:docs": "swagger-ui-serve api-docs.json",
    "analyze:bundle": "npm ls --depth=0",
    "analyze:security": "npm audit --json > security-report.json",
    "analyze:performance": "npm run performance:test > performance-report.txt"
  },
  "keywords": [
    "lms",
    "learning",
    "management",
    "system",
    "education",
    "api",
    "express",
    "nodejs",
    "mysql",
    "redis",
    "docker",
    "production-ready"
  ],
  "author": "Your Name",
  "license": "MIT",
  "dependencies": {
    "axios": "^1.10.0",
    "bcryptjs": "^2.4.3",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^7.1.5",
    "express-slow-down": "^2.1.0",
    "express-validator": "^7.0.1",
    "form-data": "^4.0.3",
    "helmet": "^7.1.0",
    "hpp": "^0.2.3",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "mysql2": "^3.6.5",
    "node-cache": "^5.1.2",
    "node-fetch": "^2.7.0",
    "nodemailer": "^6.9.7",
    "pm2": "^5.3.0",
    "redis": "^4.6.13",
    "sanitize-html": "^2.17.0",
    "sequelize": "^6.35.2",
    "sharp": "^0.33.2",
    "uuid": "^9.0.1",
    "validator": "^13.15.15",
    "winston": "^3.17.0",
    "xss-clean": "^0.1.4"
  },
  "devDependencies": {
    "@jest/globals": "^30.0.2",
    "@types/compression": "^1.7.5",
    "@types/sharp": "^0.32.0",
    "autocannon": "^7.15.0",
    "clinic": "^13.0.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.56.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "nyc": "^15.1.0",
    "supertest": "^6.3.4",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/my-lms-backend.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/my-lms-backend/issues"
  },
  "homepage": "https://github.com/your-username/my-lms-backend#readme"
}
